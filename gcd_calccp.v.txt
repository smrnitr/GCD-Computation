//gcd calculation cp
module gcd_calccp(LdA,LdB,sel_1,sel_2,sel_in,data_in,done,clk,lt,gt,eq,start);
   output reg LdA,LdB,sel_1,sel_2,sel_in, done;
   input [0:15] data_in;
   input lt,gt,eq,start,clk;
   reg [2:0] state;
   parameter S0=3'b000, S1=3'b001, S2=3'b010, S3=3'b011, S4=3'b100, S5=3'b101;
   always @(posedge clk)
      begin
         case(state)
            S0: if (start) state<=S1;
            S1: state<=S2;
            S2: begin
                   #2 if (lt) state<=S3;
                   else if(gt) state<=S4;
                   else if(eq) state<=S5;
                end
            S3: begin
                   #2 if (lt) state<=S3;
                   else if(gt) state<=S4;
                   else if(eq) state<=S5;
                end

            S4: begin
                   #2 if (lt) state<=S3;
                   else if(gt) state<=S4;
                   else if(eq) state<=S5;
                end
            S5: state<=S5;
            default: state<=S0;
         endcase
      end
   always @(state)
      begin
         case(state)
            S0: begin LdA=1; LdB=0; done=0; sel_in=1; end
            S1: begin LdA=0; LdB=1; done=0; sel_in=1; end
            S2: begin
                  if (lt) begin sel_1=1; sel_2=0; sel_in=0; LdA=0; LdB=1; end
                  else if (gt) begin sel_1=0; sel_2=1; sel_in=0; LdA=1; LdB=0; end
                  else if (eq) done=1;
                end
            S3: begin
                  if (lt) begin sel_1=1; sel_2=0; sel_in=0; LdA=0; LdB=1; end
                  else if (gt) begin sel_1=0; sel_2=1; sel_in=0; LdA=1; LdB=0; end
                  else if (eq) done=1;
                end
            S4: begin
                  if (lt) begin sel_1=1; sel_2=0; sel_in=0; LdA=0; LdB=1; end
                  else if (gt) begin sel_1=0; sel_2=1; sel_in=0; LdA=1; LdB=0; end
                  else if (eq) done=1;
                end
           S5: begin done=1; LdA=0; LdB=0; sel_1=0; sel_2=0; end
           default: begin LdA=0; LdB=0; end
        endcase
     end
endmodule
            

         
   
